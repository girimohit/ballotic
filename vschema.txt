
very complex queries:
  api/elections/result/:id 
  api/admin/voterList
  [...nextauth]/route.ts
  api/elections/route.ts









Sure, here's the revised schema without any image or logo fields:

1. **Users Table**:
   - user_id (Primary Key)
   - username
   - password
   - email
   - role (admin, voter, etc.)

2. **Parties Table**:
   - party_id (Primary Key)
   - party_name
   - party_leader

3. **Candidates Table**:
   - candidate_id (Primary Key)
   - name
   - party_id (Foreign Key referencing Parties Table)
   - election_id (Foreign Key referencing the Elections Table)

4. **Elections Table**:
   - election_id (Primary Key)
   - election_name
   - start_date
   - end_date
   - ward_number (Nullable, references Wards Table)
   - district_id (Foreign Key referencing Districts Table)

5. **Districts Table**:
   - district_id (Primary Key)
   - district_name

6. **Wards Table**:
   - ward_number (Primary Key)
   - ward_name
   - district_id (Foreign Key referencing Districts Table)

7. **Voters Table**:
   - voter_id (Primary Key)
   - user_id (Foreign Key referencing Users Table)
   - election_id (Foreign Key referencing Elections Table)
   - ward_number (Foreign Key referencing Wards Table)

8. **Votes Table**:
   - vote_id (Primary Key)
   - voter_id (Foreign Key referencing Voters Table)
   - candidate_id (Foreign Key referencing Candidates Table)
   - timestamp

9. **Election_Results Table**:
   - result_id (Primary Key)
   - election_id (Foreign Key referencing Elections Table)
   - candidate_id (Foreign Key referencing Candidates Table)
   - total_votes
   - percentage_votes










CREATE DATABASE ballotic;

USE ballotic;

CREATE TABLE Voters (
    voter_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    role ENUM('admin', 'voter') NOT NULL,
    ward_number INT,
    FOREIGN KEY (ward_number) REFERENCES Wards(ward_number)
);

CREATE TABLE Parties (
    party_id INT AUTO_INCREMENT PRIMARY KEY,
    party_name VARCHAR(255) NOT NULL,
    party_leader VARCHAR(255) NOT NULL
);

CREATE TABLE Candidates (
    candidate_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    party_id INT,
    election_id INT,
    FOREIGN KEY (party_id) REFERENCES Parties(party_id),
    FOREIGN KEY (election_id) REFERENCES Elections(election_id)
);

CREATE TABLE Elections (
    election_id INT AUTO_INCREMENT PRIMARY KEY,
    election_name VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    ward_number INT,
    district_id INT,
    FOREIGN KEY (district_id) REFERENCES Districts(district_id)
);

CREATE TABLE Districts (
    district_id INT AUTO_INCREMENT PRIMARY KEY,
    district_name VARCHAR(255) NOT NULL
);

CREATE TABLE Wards (
    ward_number INT PRIMARY KEY,
    ward_name VARCHAR(255) NOT NULL,
    district_id INT,
    FOREIGN KEY (district_id) REFERENCES Districts(district_id)
);

CREATE TABLE Votes (
    vote_id INT AUTO_INCREMENT PRIMARY KEY,
    voter_id INT,
    candidate_id INT,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (voter_id) REFERENCES Voters(voter_id),
    FOREIGN KEY (candidate_id) REFERENCES Candidates(candidate_id)
);

CREATE TABLE Election_Results (
    result_id INT AUTO_INCREMENT PRIMARY KEY,
    election_id INT,
    candidate_id INT,
    total_votes INT NOT NULL,
    percentage_votes DECIMAL(5,2),
    FOREIGN KEY (election_id) REFERENCES Elections(election_id),
    FOREIGN KEY (candidate_id) REFERENCES Candidates(candidate_id)
);


-- To add district_id to voter
ALTER TABLE voter
ADD COLUMN district_id INT NOT NULL DEFAULT 3
ADD CONSTRAINT fk_district
FOREIGN KEY (district_id)
REFERENCES Districts(district_id)












reverse engineer
CREATE TABLE IF NOT EXISTS `ballotic`.`candidates` (
  `candidate_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `party_id` INT NULL DEFAULT NULL,
  `election_id` INT NULL DEFAULT NULL,
  `email` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`candidate_id`),
  INDEX `party_id` (`party_id` ASC) VISIBLE,
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  CONSTRAINT `candidates_ibfk_1`
    FOREIGN KEY (`party_id`)
    REFERENCES `ballotic`.`parties` (`party_id`),
  CONSTRAINT `candidates_ibfk_2`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballotic`.`elections` (`election_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 28
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci





CREATE TABLE IF NOT EXISTS `ballotic`.`elections` (
  `election_id` INT NOT NULL AUTO_INCREMENT,
  `election_name` VARCHAR(255) NOT NULL,
  `start_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `end_date` DATE NOT NULL,
  `ward_number` INT NULL DEFAULT NULL,
  `district_id` INT NULL DEFAULT NULL,
  `current_status` TINYINT(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`election_id`),
  INDEX `district_id` (`district_id` ASC) VISIBLE,
  CONSTRAINT `elections_ibfk_1`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballotic`.`districts` (`district_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`wards` (
  `ward_number` INT NOT NULL,
  `ward_name` VARCHAR(255) NOT NULL,
  `district_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`ward_number`),
  INDEX `district_id` (`district_id` ASC) VISIBLE,
  CONSTRAINT `wards_ibfk_1`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballotic`.`districts` (`district_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`votes` (
  `vote_id` INT NOT NULL AUTO_INCREMENT,
  `voter_id` INT NULL DEFAULT NULL,
  `candidate_id` INT NULL DEFAULT NULL,
  `timestamp` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `election_id` INT NOT NULL,
  PRIMARY KEY (`vote_id`),
  INDEX `voter_id` (`voter_id` ASC) VISIBLE,
  INDEX `candidate_id` (`candidate_id` ASC) VISIBLE,
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  CONSTRAINT `votes_ibfk_1`
    FOREIGN KEY (`voter_id`)
    REFERENCES `ballotic`.`voter` (`voter_id`),
  CONSTRAINT `votes_ibfk_2`
    FOREIGN KEY (`candidate_id`)
    REFERENCES `ballotic`.`candidates` (`candidate_id`),
  CONSTRAINT `votes_ibfk_3`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballotic`.`elections` (`election_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`parties` (
  `party_id` INT NOT NULL AUTO_INCREMENT,
  `party_name` VARCHAR(255) NOT NULL,
  `party_leader` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`party_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballotic`.`districts` (
  `district_id` INT NOT NULL AUTO_INCREMENT,
  `district_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`district_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`voter` (
  `voter_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `role` ENUM('admin', 'voter') NOT NULL,
  `ward_number` INT NOT NULL,
  `district_id` INT NOT NULL,
  PRIMARY KEY (`voter_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `voter_id_UNIQUE` (`voter_id` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_district` (`district_id` ASC) VISIBLE,
  INDEX `voter_ibfk_1` (`ward_number` ASC) VISIBLE,
  CONSTRAINT `fk_district`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballotic`.`districts` (`district_id`),
  CONSTRAINT `voter_ibfk_1`
    FOREIGN KEY (`ward_number`)
    REFERENCES `ballotic`.`wards` (`ward_number`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci




























## reverse engineer 2 

CREATE TABLE IF NOT EXISTS `ballotic`.`election_results` (
  `result_id` INT NOT NULL AUTO_INCREMENT,
  `election_id` INT NULL DEFAULT NULL,
  `candidate_id` INT NULL DEFAULT NULL,
  `total_votes` INT NOT NULL,
  `percentage_votes` DECIMAL(5,2) NULL DEFAULT NULL,
  PRIMARY KEY (`result_id`),
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  INDEX `candidate_id` (`candidate_id` ASC) VISIBLE,
  CONSTRAINT `election_results_ibfk_1`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballotic`.`elections` (`election_id`),
  CONSTRAINT `election_results_ibfk_2`
    FOREIGN KEY (`candidate_id`)
    REFERENCES `ballotic`.`candidates` (`candidate_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballotic`.`votes` (
  `vote_id` INT NOT NULL AUTO_INCREMENT,
  `voter_id` INT NULL DEFAULT NULL,
  `candidate_id` INT NULL DEFAULT NULL,
  `timestamp` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `election_id` INT NOT NULL,
  PRIMARY KEY (`vote_id`),
  INDEX `voter_id` (`voter_id` ASC) VISIBLE,
  INDEX `candidate_id` (`candidate_id` ASC) VISIBLE,
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  CONSTRAINT `votes_ibfk_1`
    FOREIGN KEY (`voter_id`)
    REFERENCES `ballotic`.`voter` (`voter_id`),
  CONSTRAINT `votes_ibfk_2`
    FOREIGN KEY (`candidate_id`)
    REFERENCES `ballotic`.`candidates` (`candidate_id`),
  CONSTRAINT `votes_ibfk_3`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballotic`.`elections` (`election_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballotic`.`wards` (
  `ward_number` INT NOT NULL,
  `ward_name` VARCHAR(255) NOT NULL,
  `district_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`ward_number`),
  INDEX `district_id` (`district_id` ASC) VISIBLE,
  CONSTRAINT `wards_ibfk_1`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballotic`.`districts` (`district_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`elections` (
  `election_id` INT NOT NULL AUTO_INCREMENT,
  `election_name` VARCHAR(255) NOT NULL,
  `start_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `end_date` DATE NOT NULL,
  `ward_number` INT NULL DEFAULT NULL,
  `district_id` INT NULL DEFAULT NULL,
  `current_status` TINYINT(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`election_id`),
  INDEX `district_id` (`district_id` ASC) VISIBLE,
  CONSTRAINT `elections_ibfk_1`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballotic`.`districts` (`district_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci




CREATE TABLE IF NOT EXISTS `ballotic`.`voter` (
  `voter_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `role` ENUM('admin', 'voter') NOT NULL,
  `ward_number` INT NOT NULL,
  `district_id` INT NOT NULL,
  `dob` DATE NOT NULL DEFAULT '2000-01-01',
  PRIMARY KEY (`voter_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `voter_id_UNIQUE` (`voter_id` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_district` (`district_id` ASC) VISIBLE,
  INDEX `voter_ibfk_1` (`ward_number` ASC) VISIBLE,
  CONSTRAINT `fk_district`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballotic`.`districts` (`district_id`),
  CONSTRAINT `voter_ibfk_1`
    FOREIGN KEY (`ward_number`)
    REFERENCES `ballotic`.`wards` (`ward_number`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`candidates` (
  `candidate_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `party_id` INT NULL DEFAULT NULL,
  `election_id` INT NULL DEFAULT NULL,
  `email` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`candidate_id`),
  INDEX `party_id` (`party_id` ASC) VISIBLE,
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  CONSTRAINT `candidates_ibfk_1`
    FOREIGN KEY (`party_id`)
    REFERENCES `ballotic`.`parties` (`party_id`),
  CONSTRAINT `candidates_ibfk_2`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballotic`.`elections` (`election_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 28
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballotic`.`parties` (
  `party_id` INT NOT NULL AUTO_INCREMENT,
  `party_name` VARCHAR(255) NOT NULL,
  `party_leader` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`party_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballotic`.`districts` (
  `district_id` INT NOT NULL AUTO_INCREMENT,
  `district_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`district_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci





















schema

ballotic Database Schema:

Table: candidates
------------------------------------------------
| candidate_id | name     | party_id | election_id | email        |
------------------------------------------------
| INT          | VARCHAR  | INT      | INT         | VARCHAR      |
------------------------------------------------
| Primary Key  | Not Null | Nullable | Nullable    | Not Null     |
------------------------------------------------

Table: election_results
----------------------------------------------------------------
| result_id | election_id | candidate_id | total_votes | percentage_votes |
----------------------------------------------------------------
| INT       | INT         | INT          | INT         | DECIMAL          |
----------------------------------------------------------------
| Primary Key | Nullable   | Nullable     | Not Null    | Nullable         |
----------------------------------------------------------------

Table: elections
-------------------------------------------------------------
| election_id | election_name | start_date | end_date | ward_number | district_id | current_status |
-------------------------------------------------------------
| INT         | VARCHAR       | TIMESTAMP  | DATE     | INT         | INT         | TINYINT       |
-------------------------------------------------------------
| Primary Key | Not Null      | Nullable   | Not Null | Nullable    | Nullable    | Not Null      |
-------------------------------------------------------------

Table: wards
---------------------------------------
| ward_number | ward_name | district_id |
---------------------------------------
| INT         | VARCHAR   | INT         |
---------------------------------------
| Primary Key | Not Null  | Nullable    |
---------------------------------------

Table: votes
-------------------------------------------------------------------
| vote_id | voter_id | candidate_id | timestamp  | election_id |
-------------------------------------------------------------------
| INT     | INT      | INT          | TIMESTAMP  | INT         |
-------------------------------------------------------------------
| Primary Key | Nullable | Nullable    | Nullable   | Not Null   |
-------------------------------------------------------------------

Table: parties
----------------------------------
| party_id | party_name | party_leader |
----------------------------------
| INT      | VARCHAR    | VARCHAR     |
----------------------------------
| Primary Key | Not Null  | Not Null    |
----------------------------------

Table: districts
-------------------------
| district_id | district_name |
-------------------------
| INT         | VARCHAR       |
-------------------------
| Primary Key | Not Null      |
-------------------------

Table: voter
---------------------------------------------------------------------------------
| voter_id | username | password | email    | role  | ward_number | district_id | dob       |
---------------------------------------------------------------------------------
| INT      | VARCHAR  | VARCHAR  | VARCHAR  | ENUM  | INT         | INT         | DATE      |
---------------------------------------------------------------------------------
| Primary Key | Unique (username) | Not Null | Unique (email) | Not Null    |
---------------------------------------------------------------------------------




TODO
  create a voted table which will store the info about the voter voted into which election and then will help to identify which election cards should be shown to the voter and which should be not




















'CREATE TABLE IF NOT EXISTS `ballot_trial`.`districts` (
  `district_id` INT NOT NULL AUTO_INCREMENT,
  `district_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`district_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci'




CREATE TABLE IF NOT EXISTS `ballot_trial`.`parties` (
  `party_id` INT NOT NULL AUTO_INCREMENT,
  `party_name` VARCHAR(255) NOT NULL,
  `party_leader` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`party_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 12
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballot_trial`.`wards` (
  `ward_number` INT NOT NULL,
  `ward_name` VARCHAR(255) NOT NULL,
  `district_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`ward_number`),
  INDEX `district_id` (`district_id` ASC) VISIBLE,
  CONSTRAINT `wards_ibfk_1`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballot_trial`.`districts` (`district_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballot_trial`.`elections` (
  `election_id` INT NOT NULL AUTO_INCREMENT,
  `election_name` VARCHAR(255) NOT NULL,
  `start_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `end_date` DATE NOT NULL,
  `ward_number` INT NULL DEFAULT NULL,
  `district_id` INT NULL DEFAULT NULL,
  `current_status` TINYINT(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`election_id`),
  INDEX `district_id` (`district_id` ASC) VISIBLE,
  CONSTRAINT `elections_ibfk_1`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballot_trial`.`districts` (`district_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci



CREATE TABLE IF NOT EXISTS `ballot_trial`.`voter` (
  `voter_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `role` ENUM('admin', 'voter') NOT NULL,
  `ward_number` INT NOT NULL,
  `district_id` INT NOT NULL,
  `dob` DATE NOT NULL DEFAULT '2000-01-01',
  PRIMARY KEY (`voter_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `voter_id_UNIQUE` (`voter_id` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_district` (`district_id` ASC) VISIBLE,
  INDEX `voter_ibfk_1` (`ward_number` ASC) VISIBLE,
  CONSTRAINT `fk_district`
    FOREIGN KEY (`district_id`)
    REFERENCES `ballot_trial`.`districts` (`district_id`),
  CONSTRAINT `voter_ibfk_1`
    FOREIGN KEY (`ward_number`)
    REFERENCES `ballot_trial`.`wards` (`ward_number`))
ENGINE = InnoDB
AUTO_INCREMENT = 26
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballot_trial`.`candidates` (
  `candidate_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `party_id` INT NULL DEFAULT NULL,
  `election_id` INT NULL DEFAULT NULL,
  `email` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`candidate_id`),
  INDEX `party_id` (`party_id` ASC) VISIBLE,
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  CONSTRAINT `candidates_ibfk_1`
    FOREIGN KEY (`party_id`)
    REFERENCES `ballot_trial`.`parties` (`party_id`),
  CONSTRAINT `candidates_ibfk_2`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballot_trial`.`elections` (`election_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 28
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci


CREATE TABLE IF NOT EXISTS `ballot_trial`.`votes` (
  `vote_id` INT NOT NULL AUTO_INCREMENT,
  `voter_id` INT NULL DEFAULT NULL,
  `candidate_id` INT NULL DEFAULT NULL,
  `timestamp` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `election_id` INT NOT NULL,
  PRIMARY KEY (`vote_id`),
  INDEX `voter_id` (`voter_id` ASC) VISIBLE,
  INDEX `candidate_id` (`candidate_id` ASC) VISIBLE,
  INDEX `election_id` (`election_id` ASC) VISIBLE,
  CONSTRAINT `votes_ibfk_1`
    FOREIGN KEY (`voter_id`)
    REFERENCES `ballot_trial`.`voter` (`voter_id`),
  CONSTRAINT `votes_ibfk_2`
    FOREIGN KEY (`candidate_id`)
    REFERENCES `ballot_trial`.`candidates` (`candidate_id`),
  CONSTRAINT `votes_ibfk_3`
    FOREIGN KEY (`election_id`)
    REFERENCES `ballot_trial`.`elections` (`election_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;




CREATE TABLE otps (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    otp VARCHAR(6) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE ballotic.otps 
ADD CONSTRAINT fkotp
FOREIGN KEY (user_id)    
REFERENCES ballotic.voter(voter_id);